name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - staging

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_ACCESS_TOKEN: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}
      SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
      SERVER_IP: ${{ secrets.SERVER_IP }}
      STAGING_SERVER_IP: ${{ secrets.STAGING_SERVER_IP }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        run: echo $DOCKERHUB_ACCESS_TOKEN | docker login -u $DOCKERHUB_USERNAME --password-stdin

      - name: Set environment-specific variables
        id: set-env-vars
        run: |
          if [ "${{ github.ref }}" == "refs/heads/main" ]; then
            echo "IMAGE_TAG=prod" >> $GITHUB_ENV
            echo "ARGS=--build-arg NEXT_PUBLIC_INTERNAL_API_URL=http://backend:3001 \
                  --build-arg NEXT_PUBLIC_API_URL=https://api.nastynipples.com/ \
                  --build-arg NEXT_PUBLIC_BASE_URL=https://www.nastynipples.com \
                  --build-arg NEXT_PUBLIC_CLOUDFRONT_MEDIA=https://duz30n69vbwvd.cloudfront.net/" >> $GITHUB_ENV
          else
            echo "IMAGE_TAG=staging" >> $GITHUB_ENV
            echo "ARGS=--build-arg NEXT_PUBLIC_INTERNAL_API_URL=http://backend:3001 \
                  --build-arg NEXT_PUBLIC_API_URL=https://api-staging.nastynipples.com/ \
                  --build-arg NEXT_PUBLIC_BASE_URL=https://staging.nastynipples.com \
                  --build-arg NEXT_PUBLIC_CLOUDFRONT_MEDIA=https://d10arthua11ogq.cloudfront.net/" >> $GITHUB_ENV
          fi

      - name: Build and push frontend image
        run: |
          docker buildx build --platform linux/amd64 \
            -t $DOCKERHUB_USERNAME/goodtobenaked-frontend-${{ env.IMAGE_TAG }}:latest \
            $ARGS \
            -f frontend/Dockerfile.prod --push ./frontend

      - name: Build and push backend image
        run: |
          docker buildx build --platform linux/amd64 \
            -t $DOCKERHUB_USERNAME/goodtobenaked-backend-${{ env.IMAGE_TAG }}:latest \
            -f backend/Dockerfile.prod --push ./backend

      - name: Deploy to server
        if: github.ref == 'refs/heads/main'
        uses: appleboy/ssh-action@v0.1.0
        with:
          host: ${{ env.SERVER_IP }}
          username: root
          key: ${{ env.SSH_PRIVATE_KEY }}
          script: |
            docker stack deploy -c ./docker-stack.yml goodtobenaked
            docker service scale goodtobenaked_migrate=1
            while [ $(docker service ps goodtobenaked_migrate --format '{{.CurrentState}}' | grep -E 'Running|Complete' | wc -l) -ne 1 ]; do sleep 1; done
            docker service scale goodtobenaked_migrate=0

      - name: Deploy to staging server
        if: github.ref == 'refs/heads/staging'
        uses: appleboy/ssh-action@v0.1.0
        with:
          host: ${{ env.STAGING_SERVER_IP }}
          username: root
          key: ${{ env.SSH_PRIVATE_KEY }}
          script: |
            docker stack deploy -c ./docker-stack-staging.yml goodtobenaked-staging
            docker service scale goodtobenaked-staging_migrate=1
            while [ $(docker service ps goodtobenaked-staging_migrate --format '{{.CurrentState}}' | grep -E 'Running|Complete' | wc -l) -ne 1 ]; do sleep 1; done
            docker service scale goodtobenaked-staging_migrate=0
