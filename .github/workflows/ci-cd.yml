name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - staging

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_ACCESS_TOKEN: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}
      SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
      SSH_PRIVATE_KEY_HOSTINGER: ${{ secrets.SSH_PRIVATE_KEY_HOSTINGER }}
      SERVER_IP: ${{ secrets.SERVER_IP }}
      STAGING_SERVER_IP: ${{ secrets.STAGING_SERVER_IP }}
      MAIL_GUN_API_KEY: ${{ secrets.MAIL_GUN_API_KEY }}
      MAIL_GUN_BASE_URL: ${{ secrets.MAIL_GUN_BASE_URL }}
      JWT_SECRET: ${{ secrets.JWT_SECRET }}
      STRIPE_ENDPOINT_SECRET: ${{ secrets.STRIPE_ENDPOINT_SECRET }}
      STRIPE_API_KEY: ${{ secrets.STRIPE_API_KEY }}
      STRIPE_PUBLISHABLE_KEY: ${{ secrets.STRIPE_PUBLISHABLE_KEY }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set environment-specific variables
        run: |
          export MAIL_GUN_API_KEY=${{ secrets.MAIL_GUN_API_KEY }}
          export MAIL_GUN_BASE_URL=${{ secrets.MAIL_GUN_BASE_URL }}
          export JWT_SECRET=${{ secrets.JWT_SECRET }}
          export STRIPE_ENDPOINT_SECRET=${{ secrets.STRIPE_ENDPOINT_SECRET }}
          export STRIPE_API_KEY=${{ secrets.STRIPE_API_KEY }}
          export STRIPE_PUBLISHABLE_KEY=${{ secrets.STRIPE_PUBLISHABLE_KEY }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        run: echo $DOCKERHUB_ACCESS_TOKEN | docker login -u $DOCKERHUB_USERNAME --password-stdin

      - name: Set environment-specific variables
        id: set-env-vars
        run: |
          if [ "${{ github.ref }}" == "refs/heads/main" ]; then
            echo "IMAGE_TAG=latest" >> $GITHUB_ENV
            echo "ARGS=--build-arg NEXT_PUBLIC_INTERNAL_API_URL=http://backend:3001 \
                  --build-arg NEXT_PUBLIC_API_URL=https://api.goodtobenaked.com/ \
                  --build-arg NEXT_PUBLIC_BASE_URL=https://goodtobenaked.com \
                  --build-arg NEXT_PUBLIC_CLOUDFRONT_MEDIA=https://duz30n69vbwvd.cloudfront.net/" >> $GITHUB_ENV
          else
            echo "IMAGE_TAG=staging" >> $GITHUB_ENV
            echo "ARGS=--build-arg NEXT_PUBLIC_INTERNAL_API_URL=http://backend:3001 \
                  --build-arg NEXT_PUBLIC_API_URL=https://api-staging.goodtobenaked.com/ \
                  --build-arg NEXT_PUBLIC_BASE_URL=https://staging.goodtobenaked.com \
                  --build-arg NEXT_PUBLIC_CLOUDFRONT_MEDIA=https://d10arthua11ogq.cloudfront.net/" >> $GITHUB_ENV
          fi

      - name: Build and push frontend image
        run: |
          docker buildx build --platform linux/amd64 \
            -t $DOCKERHUB_USERNAME/goodtobenaked-frontend:${{ env.IMAGE_TAG }} \
            $ARGS \
            -f frontend/Dockerfile.prod --push ./frontend

      - name: Build and push backend image
        run: |
          docker buildx build --platform linux/amd64 \
            -t $DOCKERHUB_USERNAME/goodtobenaked-backend:${{ env.IMAGE_TAG }} \
            -f backend/Dockerfile.prod --push ./backend

      - name: Run tests before deployment
        run: |
          cd backend
          npm install
          npm run test:ci

      - name: Decrypt SSH key
        run: |
          echo "$SSH_PRIVATE_KEY_HOSTINGER" > /tmp/encrypted_key
          openssl rsa -in /tmp/encrypted_key -out /tmp/decrypted_key -passin pass:${{ secrets.SSH_KEY_PASSWORD }}
          chmod 600 /tmp/decrypted_key

      - name: Deploy to staging server
        if: github.ref == 'refs/heads/staging'
        uses: appleboy/ssh-action@v0.1.0
        with:
          host: ${{ env.STAGING_SERVER_IP }}
          username: root
          key: ${{ env.SSH_PRIVATE_KEY }}
          script: |
            docker login -u $DOCKERHUB_USERNAME -p $DOCKERHUB_ACCESS_TOKEN
            docker system prune -f
            docker stack deploy --with-registry-auth --resolve-image=always -c ./docker-stack-staging.yml goodtobenaked-staging
            docker service update --force goodtobenaked-staging_backend
            docker service update --force goodtobenaked-staging_frontend

      - name: Deploy to production server
        if: github.ref == 'refs/heads/main'
        uses: appleboy/ssh-action@v0.1.0
        with:
          host: ${{ env.SERVER_IP }}
          username: root
          key: /tmp/decrypted_key
          script: |
            docker login -u $DOCKERHUB_USERNAME -p $DOCKERHUB_ACCESS_TOKEN
            docker system prune -f
            docker stack deploy --with-registry-auth --resolve-image=always -c ./docker-stack.yml goodtobenaked
            docker service update --force goodtobenaked_backend
            docker service update --force goodtobenaked_frontend
